/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2014-11-17 18:43:33 UTC)
 * on 2014-11-26 at 22:20:38 UTC 
 * Modify at your own risk.
 */

package com.appspot.tyndr_server.tyndr;

/**
 * Service definition for Tyndr (v1).
 *
 * <p>
 * Tyndr API v1.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link TyndrRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Tyndr extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.19.0 of the tyndr library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://tyndr-server.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "tyndr/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Tyndr(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Tyndr(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Advert collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Tyndr tyndr = new Tyndr(...);}
   *   {@code Tyndr.Advert.List request = tyndr.advert().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Advert advert() {
    return new Advert();
  }

  /**
   * The "advert" collection of methods.
   */
  public class Advert {

    /**
     * Currently returns the no newest adverts in Datastore. Author: Kristjan Eldjarn Hjorleifsson,
     * keh4@hi.is Author: Halldor Eldjarn, hae28@hi.is
     *
     * Create a request for the method "advert.all".
     *
     * This request holds the parameters needed by the tyndr server.  After setting any optional
     * parameters, call the {@link All#execute()} method to invoke the remote operation.
     *
     * @param no
     * @return the request
     */
    public All all(java.lang.Integer no) throws java.io.IOException {
      All result = new All(no);
      initialize(result);
      return result;
    }

    public class All extends TyndrRequest<com.appspot.tyndr_server.tyndr.model.MessagesAdvertMessageCollection> {

      private static final String REST_PATH = "all/{no}";

      /**
       * Currently returns the no newest adverts in Datastore. Author: Kristjan Eldjarn Hjorleifsson,
       * keh4@hi.is Author: Halldor Eldjarn, hae28@hi.is
       *
       * Create a request for the method "advert.all".
       *
       * This request holds the parameters needed by the the tyndr server.  After setting any optional
       * parameters, call the {@link All#execute()} method to invoke the remote operation. <p> {@link
       * All#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param no
       * @since 1.13
       */
      protected All(java.lang.Integer no) {
        super(Tyndr.this, "GET", REST_PATH, null, com.appspot.tyndr_server.tyndr.model.MessagesAdvertMessageCollection.class);
        this.no = com.google.api.client.util.Preconditions.checkNotNull(no, "Required parameter no must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public All setAlt(java.lang.String alt) {
        return (All) super.setAlt(alt);
      }

      @Override
      public All setFields(java.lang.String fields) {
        return (All) super.setFields(fields);
      }

      @Override
      public All setKey(java.lang.String key) {
        return (All) super.setKey(key);
      }

      @Override
      public All setOauthToken(java.lang.String oauthToken) {
        return (All) super.setOauthToken(oauthToken);
      }

      @Override
      public All setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (All) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public All setQuotaUser(java.lang.String quotaUser) {
        return (All) super.setQuotaUser(quotaUser);
      }

      @Override
      public All setUserIp(java.lang.String userIp) {
        return (All) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.Integer no;

      /**

       */
      public java.lang.Integer getNo() {
        return no;
      }

      public All setNo(java.lang.Integer no) {
        this.no = no;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String label;

      /**

       */
      public java.lang.String getLabel() {
        return label;
      }

      public All setLabel(java.lang.String label) {
        this.label = label;
        return this;
      }

      @Override
      public All set(String parameterName, Object value) {
        return (All) super.set(parameterName, value);
      }
    }
    /**
     * Grabs information from the request.POST and populates an Advert instance with it. Author:
     * Kristjan Eldjarn Hjorleifsson, keh4@hi.is Author: Halldor Eldjarn, hae28@hi.is
     *
     * Create a request for the method "advert.create".
     *
     * This request holds the parameters needed by the tyndr server.  After setting any optional
     * parameters, call the {@link Create#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.appspot.tyndr_server.tyndr.model.MessagesCreateAdvertMessage}
     * @return the request
     */
    public Create create(com.appspot.tyndr_server.tyndr.model.MessagesCreateAdvertMessage content) throws java.io.IOException {
      Create result = new Create(content);
      initialize(result);
      return result;
    }

    public class Create extends TyndrRequest<com.appspot.tyndr_server.tyndr.model.MessagesAdvertReferenceMessage> {

      private static final String REST_PATH = "create";

      /**
       * Grabs information from the request.POST and populates an Advert instance with it. Author:
       * Kristjan Eldjarn Hjorleifsson, keh4@hi.is Author: Halldor Eldjarn, hae28@hi.is
       *
       * Create a request for the method "advert.create".
       *
       * This request holds the parameters needed by the the tyndr server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
       * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.appspot.tyndr_server.tyndr.model.MessagesCreateAdvertMessage}
       * @since 1.13
       */
      protected Create(com.appspot.tyndr_server.tyndr.model.MessagesCreateAdvertMessage content) {
        super(Tyndr.this, "POST", REST_PATH, content, com.appspot.tyndr_server.tyndr.model.MessagesAdvertReferenceMessage.class);
      }

      @Override
      public Create setAlt(java.lang.String alt) {
        return (Create) super.setAlt(alt);
      }

      @Override
      public Create setFields(java.lang.String fields) {
        return (Create) super.setFields(fields);
      }

      @Override
      public Create setKey(java.lang.String key) {
        return (Create) super.setKey(key);
      }

      @Override
      public Create setOauthToken(java.lang.String oauthToken) {
        return (Create) super.setOauthToken(oauthToken);
      }

      @Override
      public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Create) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Create setQuotaUser(java.lang.String quotaUser) {
        return (Create) super.setQuotaUser(quotaUser);
      }

      @Override
      public Create setUserIp(java.lang.String userIp) {
        return (Create) super.setUserIp(userIp);
      }

      @Override
      public Create set(String parameterName, Object value) {
        return (Create) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "advert.img".
     *
     * This request holds the parameters needed by the tyndr server.  After setting any optional
     * parameters, call the {@link Img#execute()} method to invoke the remote operation.
     *
     * @param id
     * @return the request
     */
    public Img img(java.lang.String id) throws java.io.IOException {
      Img result = new Img(id);
      initialize(result);
      return result;
    }

    public class Img extends TyndrRequest<com.appspot.tyndr_server.tyndr.model.MessagesAdvertMessage> {

      private static final String REST_PATH = "image/{id}";

      /**
       * Create a request for the method "advert.img".
       *
       * This request holds the parameters needed by the the tyndr server.  After setting any optional
       * parameters, call the {@link Img#execute()} method to invoke the remote operation. <p> {@link
       * Img#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param id
       * @since 1.13
       */
      protected Img(java.lang.String id) {
        super(Tyndr.this, "GET", REST_PATH, null, com.appspot.tyndr_server.tyndr.model.MessagesAdvertMessage.class);
        this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Img setAlt(java.lang.String alt) {
        return (Img) super.setAlt(alt);
      }

      @Override
      public Img setFields(java.lang.String fields) {
        return (Img) super.setFields(fields);
      }

      @Override
      public Img setKey(java.lang.String key) {
        return (Img) super.setKey(key);
      }

      @Override
      public Img setOauthToken(java.lang.String oauthToken) {
        return (Img) super.setOauthToken(oauthToken);
      }

      @Override
      public Img setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Img) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Img setQuotaUser(java.lang.String quotaUser) {
        return (Img) super.setQuotaUser(quotaUser);
      }

      @Override
      public Img setUserIp(java.lang.String userIp) {
        return (Img) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String id;

      /**

       */
      public java.lang.String getId() {
        return id;
      }

      public Img setId(java.lang.String id) {
        this.id = id;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String label;

      /**

       */
      public java.lang.String getLabel() {
        return label;
      }

      public Img setLabel(java.lang.String label) {
        this.label = label;
        return this;
      }

      @Override
      public Img set(String parameterName, Object value) {
        return (Img) super.set(parameterName, value);
      }
    }
    /**
     * Receives a latitude and a longitude and returns all adverts in a rectangular area around that
     * location. Author: Kristjan Eldjarn Hjorleifsson, keh4@hi.is
     *
     * Create a request for the method "advert.loc".
     *
     * This request holds the parameters needed by the tyndr server.  After setting any optional
     * parameters, call the {@link Loc#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public Loc loc() throws java.io.IOException {
      Loc result = new Loc();
      initialize(result);
      return result;
    }

    public class Loc extends TyndrRequest<com.appspot.tyndr_server.tyndr.model.MessagesAdvertMessageCollection> {

      private static final String REST_PATH = "loc-ads";

      /**
       * Receives a latitude and a longitude and returns all adverts in a rectangular area around that
       * location. Author: Kristjan Eldjarn Hjorleifsson, keh4@hi.is
       *
       * Create a request for the method "advert.loc".
       *
       * This request holds the parameters needed by the the tyndr server.  After setting any optional
       * parameters, call the {@link Loc#execute()} method to invoke the remote operation. <p> {@link
       * Loc#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected Loc() {
        super(Tyndr.this, "GET", REST_PATH, null, com.appspot.tyndr_server.tyndr.model.MessagesAdvertMessageCollection.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Loc setAlt(java.lang.String alt) {
        return (Loc) super.setAlt(alt);
      }

      @Override
      public Loc setFields(java.lang.String fields) {
        return (Loc) super.setFields(fields);
      }

      @Override
      public Loc setKey(java.lang.String key) {
        return (Loc) super.setKey(key);
      }

      @Override
      public Loc setOauthToken(java.lang.String oauthToken) {
        return (Loc) super.setOauthToken(oauthToken);
      }

      @Override
      public Loc setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Loc) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Loc setQuotaUser(java.lang.String quotaUser) {
        return (Loc) super.setQuotaUser(quotaUser);
      }

      @Override
      public Loc setUserIp(java.lang.String userIp) {
        return (Loc) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.Double lat;

      /**

       */
      public java.lang.Double getLat() {
        return lat;
      }

      public Loc setLat(java.lang.Double lat) {
        this.lat = lat;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.Double rng;

      /**

       */
      public java.lang.Double getRng() {
        return rng;
      }

      public Loc setRng(java.lang.Double rng) {
        this.rng = rng;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.Double lon;

      /**

       */
      public java.lang.Double getLon() {
        return lon;
      }

      public Loc setLon(java.lang.Double lon) {
        this.lon = lon;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String label;

      /**

       */
      public java.lang.String getLabel() {
        return label;
      }

      public Loc setLabel(java.lang.String label) {
        this.label = label;
        return this;
      }

      @Override
      public Loc set(String parameterName, Object value) {
        return (Loc) super.set(parameterName, value);
      }
    }
    /**
     * Returns an AdvertMessageCollection of all of an authorised user's Adverts. Author: Kristjan
     * Eldjarn Hjorleifsson, keh4@hi.is
     *
     * Create a request for the method "advert.mine".
     *
     * This request holds the parameters needed by the tyndr server.  After setting any optional
     * parameters, call the {@link Mine#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public Mine mine() throws java.io.IOException {
      Mine result = new Mine();
      initialize(result);
      return result;
    }

    public class Mine extends TyndrRequest<com.appspot.tyndr_server.tyndr.model.MessagesAdvertMessageCollection> {

      private static final String REST_PATH = "my-ads";

      /**
       * Returns an AdvertMessageCollection of all of an authorised user's Adverts. Author: Kristjan
       * Eldjarn Hjorleifsson, keh4@hi.is
       *
       * Create a request for the method "advert.mine".
       *
       * This request holds the parameters needed by the the tyndr server.  After setting any optional
       * parameters, call the {@link Mine#execute()} method to invoke the remote operation. <p> {@link
       * Mine#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected Mine() {
        super(Tyndr.this, "GET", REST_PATH, null, com.appspot.tyndr_server.tyndr.model.MessagesAdvertMessageCollection.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Mine setAlt(java.lang.String alt) {
        return (Mine) super.setAlt(alt);
      }

      @Override
      public Mine setFields(java.lang.String fields) {
        return (Mine) super.setFields(fields);
      }

      @Override
      public Mine setKey(java.lang.String key) {
        return (Mine) super.setKey(key);
      }

      @Override
      public Mine setOauthToken(java.lang.String oauthToken) {
        return (Mine) super.setOauthToken(oauthToken);
      }

      @Override
      public Mine setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Mine) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Mine setQuotaUser(java.lang.String quotaUser) {
        return (Mine) super.setQuotaUser(quotaUser);
      }

      @Override
      public Mine setUserIp(java.lang.String userIp) {
        return (Mine) super.setUserIp(userIp);
      }

      @Override
      public Mine set(String parameterName, Object value) {
        return (Mine) super.set(parameterName, value);
      }
    }
    /**
     * Returns the Advert with id. Author: Kristjan Eldjarn Hjorleifsson, keh4@hi.is Author: Halldor
     * Eldjarn, hae28@hi.is
     *
     * Create a request for the method "advert.query".
     *
     * This request holds the parameters needed by the tyndr server.  After setting any optional
     * parameters, call the {@link Query#execute()} method to invoke the remote operation.
     *
     * @param id
     * @return the request
     */
    public Query query(java.lang.String id) throws java.io.IOException {
      Query result = new Query(id);
      initialize(result);
      return result;
    }

    public class Query extends TyndrRequest<com.appspot.tyndr_server.tyndr.model.MessagesAdvertMessage> {

      private static final String REST_PATH = "single/{id}";

      /**
       * Returns the Advert with id. Author: Kristjan Eldjarn Hjorleifsson, keh4@hi.is Author: Halldor
       * Eldjarn, hae28@hi.is
       *
       * Create a request for the method "advert.query".
       *
       * This request holds the parameters needed by the the tyndr server.  After setting any optional
       * parameters, call the {@link Query#execute()} method to invoke the remote operation. <p> {@link
       * Query#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param id
       * @since 1.13
       */
      protected Query(java.lang.String id) {
        super(Tyndr.this, "GET", REST_PATH, null, com.appspot.tyndr_server.tyndr.model.MessagesAdvertMessage.class);
        this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Query setAlt(java.lang.String alt) {
        return (Query) super.setAlt(alt);
      }

      @Override
      public Query setFields(java.lang.String fields) {
        return (Query) super.setFields(fields);
      }

      @Override
      public Query setKey(java.lang.String key) {
        return (Query) super.setKey(key);
      }

      @Override
      public Query setOauthToken(java.lang.String oauthToken) {
        return (Query) super.setOauthToken(oauthToken);
      }

      @Override
      public Query setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Query) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Query setQuotaUser(java.lang.String quotaUser) {
        return (Query) super.setQuotaUser(quotaUser);
      }

      @Override
      public Query setUserIp(java.lang.String userIp) {
        return (Query) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String id;

      /**

       */
      public java.lang.String getId() {
        return id;
      }

      public Query setId(java.lang.String id) {
        this.id = id;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String label;

      /**

       */
      public java.lang.String getLabel() {
        return label;
      }

      public Query setLabel(java.lang.String label) {
        this.label = label;
        return this;
      }

      @Override
      public Query set(String parameterName, Object value) {
        return (Query) super.set(parameterName, value);
      }
    }
    /**
     * If the invoking user is the owner of advert, it is marked as resolved Author: Kristjan Eldjarn
     * Hjorleifsson, keh4@hi.is
     *
     * Create a request for the method "advert.resolve".
     *
     * This request holds the parameters needed by the tyndr server.  After setting any optional
     * parameters, call the {@link Resolve#execute()} method to invoke the remote operation.
     *
     * @param id
     * @return the request
     */
    public Resolve resolve(java.lang.String id) throws java.io.IOException {
      Resolve result = new Resolve(id);
      initialize(result);
      return result;
    }

    public class Resolve extends TyndrRequest<com.appspot.tyndr_server.tyndr.model.MessagesStatusMessage> {

      private static final String REST_PATH = "resolve/{id}";

      /**
       * If the invoking user is the owner of advert, it is marked as resolved Author: Kristjan Eldjarn
       * Hjorleifsson, keh4@hi.is
       *
       * Create a request for the method "advert.resolve".
       *
       * This request holds the parameters needed by the the tyndr server.  After setting any optional
       * parameters, call the {@link Resolve#execute()} method to invoke the remote operation. <p>
       * {@link
       * Resolve#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param id
       * @since 1.13
       */
      protected Resolve(java.lang.String id) {
        super(Tyndr.this, "POST", REST_PATH, null, com.appspot.tyndr_server.tyndr.model.MessagesStatusMessage.class);
        this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      }

      @Override
      public Resolve setAlt(java.lang.String alt) {
        return (Resolve) super.setAlt(alt);
      }

      @Override
      public Resolve setFields(java.lang.String fields) {
        return (Resolve) super.setFields(fields);
      }

      @Override
      public Resolve setKey(java.lang.String key) {
        return (Resolve) super.setKey(key);
      }

      @Override
      public Resolve setOauthToken(java.lang.String oauthToken) {
        return (Resolve) super.setOauthToken(oauthToken);
      }

      @Override
      public Resolve setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Resolve) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Resolve setQuotaUser(java.lang.String quotaUser) {
        return (Resolve) super.setQuotaUser(quotaUser);
      }

      @Override
      public Resolve setUserIp(java.lang.String userIp) {
        return (Resolve) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String id;

      /**

       */
      public java.lang.String getId() {
        return id;
      }

      public Resolve setId(java.lang.String id) {
        this.id = id;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String label;

      /**

       */
      public java.lang.String getLabel() {
        return label;
      }

      public Resolve setLabel(java.lang.String label) {
        this.label = label;
        return this;
      }

      @Override
      public Resolve set(String parameterName, Object value) {
        return (Resolve) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the User collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Tyndr tyndr = new Tyndr(...);}
   *   {@code Tyndr.User.List request = tyndr.user().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public User user() {
    return new User();
  }

  /**
   * The "user" collection of methods.
   */
  public class User {

    /**
     * Returns the email address of authorised user Author: Kristjan Eldjarn Hjorleifsson, keh4@hi.is
     *
     * Create a request for the method "user.debug".
     *
     * This request holds the parameters needed by the tyndr server.  After setting any optional
     * parameters, call the {@link Debug#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public Debug debug() throws java.io.IOException {
      Debug result = new Debug();
      initialize(result);
      return result;
    }

    public class Debug extends TyndrRequest<com.appspot.tyndr_server.tyndr.model.MessagesStatusMessage> {

      private static final String REST_PATH = "user-debug";

      /**
       * Returns the email address of authorised user Author: Kristjan Eldjarn Hjorleifsson, keh4@hi.is
       *
       * Create a request for the method "user.debug".
       *
       * This request holds the parameters needed by the the tyndr server.  After setting any optional
       * parameters, call the {@link Debug#execute()} method to invoke the remote operation. <p> {@link
       * Debug#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected Debug() {
        super(Tyndr.this, "GET", REST_PATH, null, com.appspot.tyndr_server.tyndr.model.MessagesStatusMessage.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Debug setAlt(java.lang.String alt) {
        return (Debug) super.setAlt(alt);
      }

      @Override
      public Debug setFields(java.lang.String fields) {
        return (Debug) super.setFields(fields);
      }

      @Override
      public Debug setKey(java.lang.String key) {
        return (Debug) super.setKey(key);
      }

      @Override
      public Debug setOauthToken(java.lang.String oauthToken) {
        return (Debug) super.setOauthToken(oauthToken);
      }

      @Override
      public Debug setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Debug) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Debug setQuotaUser(java.lang.String quotaUser) {
        return (Debug) super.setQuotaUser(quotaUser);
      }

      @Override
      public Debug setUserIp(java.lang.String userIp) {
        return (Debug) super.setUserIp(userIp);
      }

      @Override
      public Debug set(String parameterName, Object value) {
        return (Debug) super.set(parameterName, value);
      }
    }

  }

  /**
   * Builder for {@link Tyndr}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link Tyndr}. */
    @Override
    public Tyndr build() {
      return new Tyndr(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link TyndrRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setTyndrRequestInitializer(
        TyndrRequestInitializer tyndrRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(tyndrRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
